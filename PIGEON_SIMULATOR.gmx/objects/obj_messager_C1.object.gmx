<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_soldat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>obj_meta_agent_C1</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_blend = c_green;
Classe = 2; // &lt;-- c'est un messager
Officiel = 1;// messager officiel = estafette;
Message = 0;// 0 n'a pas de message a remettre, 1 il doit en remettre 1

SaccocheMessage = ds_list_create();
Ordre = 1;// 1 Je reviens a celui qui m'a envoyé, 0 je reste le recepteur, 1 comportement aléatoire

distance_give = 10; // distance max pour remettre le message 0 lettre


Argument[0] = 1;
Argument[1] = -1;
Execute = IA_Repos;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
ds_list_destroy(SaccocheMessage);

if Camp == -1
        {
        obj_Partie.nb_ennemi_tuer += 1
        show_debug_message(obj_Partie.nb_ennemi_tuer)
        }
    else
        {
        obj_Partie.nb_allie_tuer += 1
        show_debug_message(obj_Partie.nb_ennemi_tuer)
        }
if instance_exists(Officier_sup)
    {
    ds_list_delete(Officier_sup.ListMessager,ds_list_find_index(Officier_sup.ListMessager,id))
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>D = ds_list_find_value(SaccocheMessage,0);

if is_array(D)
    {
    Dest = D[0];
    }
else
    {
    Dest = undefined;
    }
    
if Message &lt; 0
    {
    Message = 0;
    Mission = 0;
    }
    
if Dest != undefined
&amp;&amp; instance_exists(Dest)
&amp;&amp; Message &gt; 0
    {
    if distance_to_object(Dest) &lt;= distance_give
        {
        Mess[] = 0;
        Mess = ds_list_find_value(SaccocheMessage,0);
        
        if Mess[1] != "RAPPORT"
            {
            with(Dest.id)
                {
                
                Execute = other.Mess[2];
                if string(Execute) != "IA_Attaque"
                    {
                    for (i = 3; i &lt; array_length_1d(other.Mess); i++)
                        {
                        Argument[i-3] = other.Mess[i];
                        }
                    }
                else
                    {
                    for (i = 3; i &lt; array_length_1d(other.Mess); i++)
                        {
                        ArgumentAttaque[i-3] = other.Mess[i];
                        }
                    }
                }
            }
        else
            {
            if Mess[1] == "RAPPORT"
                {
                with(Dest.id)
                    {
                    for (i = 1; i &lt; array_length_1d(other.Mess); i++)
                        {
                        ds_list_add(Renseignement,other.Mess[i])
                        }
                    }
                }
            }
        Message -= 1
        
        if Ordre == 1
            {
            ds_list_delete(SaccocheMessage,0);
            }
        }
    }
else
    {
    if Message == 0
        {
        Mission = 0;
        if distance_to_object(Officier_sup) &gt; 20
            {
            Execute = IA_Deplacement;
            Argument[0] = noone;
            Argument[1] = Officier_sup;
            Argument[2] = noone;
            Argument[5] = -1;
            Argument[6] = -1;
            Argument[7] = MSpeed;
            Argument[8] = 0;
            Argument[9] = Alpha
            Argument[10] = 1;
            }
        else
            {
            Execute = IA_Repos;
            Argument[0] = 1;
            Argument[1] = -1;
            }
        }
    }
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
