<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pigeon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_soldat</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_blend = c_yellow
image_xscale = 0.1+random(0.05)-0.025;
image_yscale = 0.1+random(0.05)-0.025;
/////////////////////Propriété de l'agent///////////////////////////
/*P = 0;
J = 0;
I = 0;*/
MSpeed = 5+random(2.5);//Vitesse maximale de deplacmement de l'agent
for (i = 0; i &lt; 15; i++)
    {
    Argument[i] = 0;
    ArgumentAttaque[i] = 0;
    }

Etat = 1;// 1 Vivant, 0 blesser, -1 mort

Fonction = 0;
Classe = 1;//0 simple soldat, 1 officier, 2 messager,....
Camp = 1;//Allié ou ennemi

Moral = random(200)-100;//Valeur moral &gt; 0 mec bien, &lt; 0 mec pas bien, = 0 deserteur

Combat = round(random(2));//Type de combat

Cadence = 0;//Vitesse de déplacement souhaitée
Officier = id;// officier référent
Officiel = 0;
Grade = 1;//Rang de l'officier
Cible = noone;
CIBLE = noone;//La cible humaine a attaquer
MODE = "REPOS";

Off_inf = noone;
PousseToi = 0;
Enervement = 0;
/////////////////////Gestion environnement//////////////////////////
Z = 0;
Z1 = 0;
Z2 = 0; 
Z3 = 0;
Z4 = 0;
Z5 = 0; 
Z6 = 0;
Z7 = 0; 
Z8 = 0;

Alpha = 0;

Dir1 = 0;
Dir2 = 0;

///////////////////////////////////////////////////////////////////
Ordre = 0;
Chance = random(100);//Variable qui indique si l'agent va mourir ou non

////////////////////////////////////////////////////////////////////
Contact = 0//Indique que l'agent touche quelqu'un d'autre
A = noone;//Autre Agent sélectionné pour d'eventuelle action
xx = x;//Pour eviter que l'agent se prenne en compte, lors des perceptions il sera deplacé loin et les calculs seront fait a partir de ses anciennes coordonnés
t = 0;//timer

Argument[0] = 1;
Execute = IA_Repos//IA_Deplacement(noone,noone,noone,point_direction(x,y,mouse_x,mouse_y),-1,0,0,0,1)//IA_Repos(0);//Le script a executer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Si je suis un simple soldat et que je suis tué alors 
je me désactive de la liste Regiment de mon officier
*/ 
if Classe == 0
    {
    if instance_exists(Officier)
        {
        ds_list_delete(Officier.Regiment,ds_list_find_index(Officier.Regiment,id));
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (x &lt; view_xview[0] || x &gt; view_xview[0]+view_wview[0] || y &lt; view_yview[0] || y &gt; view_yview[0]+view_hview[0])
    {
    visible = false
    }
else
    {
    visible = true
    }
image_angle = direction;//Le sprite est affiché selon la direction de l'agent
Chance = random(100);

if Execute != noone
    {
    script_execute(Execute,Argument);
    }

    
/////////////////////////////// REFLEXE ////////////////////////////
xx = x;
x = - 5000
A = instance_nearest(xx+lengthdir_x(bbox_right+1, direction),y+lengthdir_y(bbox_right+1, direction),obj_agent);
x = xx;

/*if PousseToi &gt; 0
    {
    speed = PousseToi  
    PousseToi -= 0.1;
    }
*/
//direction = Dir1;

if instance_exists(A)
&amp;&amp; distance_to_object(A) &lt; 1
&amp;&amp; A.id != id
    {
    Agent = A //collision_circle(x+lengthdir_x(bbox_right+1, direction),y+lengthdir_y(bbox_right+1, direction),1,obj_agent,0,1)
    
    if instance_exists(Agent)
        {
        //Agent.Contact = 1
        
        if abs((Agent.direction mod 180)-direction mod 180) &gt; 90
            {
            PousseToi = 1;
            //Dir2 = Dir1+90/(distance_to_object(Agent)+1)
            //Dir2 = Dir1-Enervement//90+(Agent.direction-direction)//random(Enervement)-Enervement/2
            if Grade &lt; Agent.Grade
                {
                //PousseToi += 1+ Agent.PousseToi;
                Enervement += 0.5;
                }
            else
                {
                if Grade == Agent.Grade
                    {
                    if Ordre &lt; Agent.Ordre
                        {
                        //PousseToi += 1+Agent.PousseToi;
                        Enervement += 0.5;
                        }
                    else
                        {
                        if Ordre == Agent.Ordre
                            {
                            if id &gt; Agent.id
                                {
                                //PousseToi += 1+Agent.PousseToi;
                                Enervement += 0.5;
                                }
                            }
                        }
                    }
                }
            }
        else
            {
            PousseToi = 1;
            //Dir2 = Dir1+90/(distance_to_object(Agent)+1)

            if Grade &lt; Agent.Grade
                {
                //PousseToi += 1+Agent.PousseToi;
                Enervement += 0.5;
                }
            else
                {
                if Grade == Agent.Grade
                    {
                    if Ordre &lt; Agent.Ordre
                        {
                        //PousseToi += 1+Agent.PousseToi;
                        Enervement += 0.5;
                        }
                    else
                        {
                        if Ordre == Agent.Ordre
                            {
                            if id &gt; Agent.id
                                {
                                //PousseToi += 1+Agent.PousseToi;
                                Enervement += 0.5;
                                }
                            }
                        }
                    }
                }
            }
        }
    else
        {
        PousseToi = 0;
        }
    }
else
    {
    PousseToi = 0;
    }
/*else
    {
    if PousseToi &gt; 0
        {
        PousseToi --;
        }
    if Enervement &gt; 0
        {
        Enervement --;
        }
    }
*/

if PousseToi &gt; 0
    {
    direction = Dir2//+random(Enervement)-Enervement/2
    }
else
    {
    direction = Dir1//+random(Enervement)-Enervement/2;
    }

/*if PousseToi &lt; 0
    {
    PousseToi = 0;
    }
else
    {
    if PousseToi &gt; 3
        {
        PousseToi = 3;
        }
    }
    
if Enervement &lt; 0
    {
    Enervement = 0;
    }
else
    {
    if Enervement &gt; 45
        {
        Enervement = 45;
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
//draw_text(x,y-10,script_get_name(Execute));
/*if instance_exists(Officier)
    {
    draw_text(x,y-5,Officier.id)
    }
draw_text(x,y-15,id)
if instance_exists(Cible)
    {
    draw_text(x,y-25,object_get_name(Cible.object_index))
    }*/

//draw_text(x,y-25,direction)
//draw_text(x,y-15,speed)
/*draw_text(x,y-75,string(P)+" "+string(J)+" "+string(I))*/



//draw_circle(x+lengthdir_x(16, direction),y+lengthdir_y(16, direction),4,false)
/*if instance_exists(Officier)
    {draw_text(x,y-15,Officier.id)}*/
/*draw_text(x,y-15,PerceptAgent[0])
draw_text(x,y-25,PerceptAgent[1])
draw_text(x,y-35,PerceptAgent[2])
draw_text(x,y-45,PerceptAgent[3])
draw_text(x,y-55,PerceptAgent[4])
draw_text(x,y-65,PerceptAgent[5])
draw_text(x,y-75,PerceptAgent[6])

if PerceptAgent[0] != noone &amp;&amp; instance_exists(PerceptAgent[0])
    draw_line(x,y,PerceptAgent[0].x,PerceptAgent[0].y);
if PerceptAgent[1] != noone &amp;&amp; instance_exists(PerceptAgent[1])
    draw_line(x,y,PerceptAgent[1].x,PerceptAgent[1].y);
if PerceptAgent[2] != noone &amp;&amp; instance_exists(PerceptAgent[2])
    draw_line(x,y,PerceptAgent[2].x,PerceptAgent[2].y);
if PerceptAgent[3] != noone &amp;&amp; instance_exists(PerceptAgent[3])
    draw_line(x,y,PerceptAgent[3].x,PerceptAgent[3].y);
if PerceptAgent[4] != noone &amp;&amp; instance_exists(PerceptAgent[4])
    draw_line(x,y,PerceptAgent[4].x,PerceptAgent[4].y);
if PerceptAgent[5] != noone &amp;&amp; instance_exists(PerceptAgent[5])
    draw_line(x,y,PerceptAgent[5].x,PerceptAgent[5].y);
if PerceptAgent[6] != noone &amp;&amp; instance_exists(PerceptAgent[6])
    draw_line(x,y,PerceptAgent[6].x,PerceptAgent[6].y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
