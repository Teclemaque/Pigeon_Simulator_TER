<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_soldat</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Camp = 1;
ExecuteOrdre = noone;

Ordres = ds_list_create();

repeat(20)
    {
    A = instance_create(x+random(20)-10,y+random(20)-10,obj_messager_C1)
    A.Officier_sup = id;
    }
    
Renseignement = ds_list_create();
//Info_C2 = ds_list_create();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var action;
while( !ds_list_empty(Ordres) ){
    action = ds_list_find_value(Ordres, 0);
    ds_list_delete(Ordres, 0);
    
    send_ordre_to_agent(action, action[? "Target"]);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 1;
direction = point_direction(x,y,mouse_x,mouse_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="83">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    with(ExecuteOrdre)
        {
        Execute = IA_Repos;
        Argument[0] = 1;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    with(ExecuteOrdre)
        {
        if ORDRE != "GROUPE"
            {
            ORDRE = "GROUPE";
            ds_list_clear(Regiment);
            }
        /*else
            {
            ORDRE = "SEPARATION"
            ds_list_clear(Regiment);
            }*/
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="52">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(ExecuteOrdre))
    {
    Messager = instance_nearest(x,y,obj_messager_C1);
    Messager.ArgumentMessager[] = 0;
    if distance_to_object(Messager) &lt;= 25
        {
        /*ds_list_add(Messager.Destinataire,ExecuteOrdre);
        Messager.ArgumentMessager[0] = IA_Grade;
        Messager.ArgumentMessager[1] = noone;
        if (ExecuteOrdre.Officiel == 0){
                Messager.ArgumentMessager[2] = 1;
            }
            else{
                Messager.ArgumentMessager[3] = 0;
            }
        Messager.ArgumentMessager[4] = noone;
        ds_list_add(Messager.SaccocheMessage,Messager.ArgumentMessager)
        Messager.Message += 1;*/

        Messager.ArgumentMessager[] = 0;
        ds_list_add(Messager.Destinataire,ExecuteOrdre);
        Messager.ArgumentMessager[0] = IA_Deplacement;
        Messager.ArgumentMessager[1] = noone;
        Messager.ArgumentMessager[2] = obj_joueur;
        Messager.ArgumentMessager[3] = noone;
        Messager.ArgumentMessager[4] = -1;
        Messager.ArgumentMessager[5] = -1;
        Messager.ArgumentMessager[6] = -1//random(360);
        Messager.ArgumentMessager[7] = -1;
        Messager.ArgumentMessager[8] = random(ExecuteOrdre.MSpeed)+1;
        Messager.ArgumentMessager[9] = -1;
        Messager.ArgumentMessager[10] = ExecuteOrdre.Alpha;
        Messager.ArgumentMessager[11] = 1;
        
        ds_list_add(Messager.SaccocheMessage,Messager.ArgumentMessager)
        Messager.Message += 1;
        
        /*show_debug_message("TAILLE "+string(array_length_1d(Messager.ArgumentMessager)));
        for (i = 0; i &lt; array_length_1d(Messager.ArgumentMessager);i++)
            {
            show_debug_message(Messager.ArgumentMessager[i])
            }*/
        for (i = 0; i &lt; ds_list_size(Messager.SaccocheMessage);i++)
            {
            show_debug_message("Je lis le "+string(i)+"i√®me message")
            f = ds_list_find_value(Messager.SaccocheMessage,i)
            for (j = 0; j &lt; array_length_1d(f); j++)
                {
                show_debug_message(" Contient : "+string(f[j]))
                }
            }
        
        with(Messager)
            {
            Execute = IA_Deplacement;
            Argument[0] = noone;
            Argument[1] = ds_list_find_value(Destinataire,0);
            Argument[2] = noone;
            Argument[5] = -1;
            Argument[6] = -1;
            Argument[7] = MSpeed;
            Argument[8] = 0;
            Argument[9] = Alpha//round(random(8))+2;
            Argument[10] = 1;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    with(ExecuteOrdre)
        {
        MODE = "GROUPE"
        Ordre = 2
        //L = ds_list_create()
        Execute = IA_Groupe//(id,0,1/2,1)
        List[0] = id;
        Argument[0] = List;
        Argument[1] = 0;
        Argument[2] = 1/2;
        Argument[3] = 1;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    t = random(9)
    with(ExecuteOrdre)
        {
        MODE = "ATTAQUE";
        //Execute = IA_Attaque
        ArgumentAttaque[0] = instance_nearest(x,y,Ennemi)
        if other.t &lt; 3
            {
            ArgumentAttaque[1] = 0;
            }
        else
            {
            if other.t &lt; 6
                {
                ArgumentAttaque[1] = 1;
                }
            else
                {
                ArgumentAttaque[1] = 2;
                }
            }
        ArgumentAttaque[2] = 2;
        ArgumentAttaque[3] = random(MSpeed);
        ArgumentAttaque[4] = -1;
        
        ArgumentRegiment = ArgumentAttaque;
        IA_Attaque();
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="49">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    T = round(random(10));
    with(ExecuteOrdre)
        {
        //Ordre = 1
        Execute = IA_Deplacement;
        Argument[0] = noone;
        Argument[1] = noone;
        Argument[2] = noone;
        if other.T &lt; 5
            {
            Argument[3] = mouse_x;
            Argument[4] = mouse_y;
            Argument[5] = -1;
            }
        else
            {
            Argument[3] = -1;
            Argument[4] = -1;
            Argument[5] = point_direction(x,y,mouse_x,mouse_y);
            }
        
        Argument[6] = -1;
        Argument[7] = 2;
        Argument[8] = 0;
        Argument[9] = Alpha//round(random(8))+2;
        Argument[10] = 1;
        //path_finding_A(x, y, mouse_x, mouse_y, 16, 8, true, Obj_Terrain_montagne, true);
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="48">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if instance_exists(ExecuteOrdre)
    {
    with(ExecuteOrdre)
        {
        Execute = IA_Repos;
        Argument[1] = -1;
        Argument[0] = 0;
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
