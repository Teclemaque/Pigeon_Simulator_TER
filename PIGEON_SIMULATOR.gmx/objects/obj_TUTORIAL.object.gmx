<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(Obj_Terrain){
    instance_destroy()
}
with(obj_MAP_controller){
    MAP_Create2_seed(100000)
    MAP_Draw2()
}
with(obj_MAP_controller){
    papper_map = ds_grid_create(width,height)
    for(var i=0;i &lt; width; i++){
        for(var j=0;j&lt;height;j++){ 
            
            var l = ds_list_create()
            if(false//ds_grid_get(other.fog,i,j) == 1
            ){
                ds_list_add(l,0)
                ds_grid_set(papper_map,i,j,l)
            } else { //si case visible
                ds_list_add(l,1)
                ds_list_add(l,ds_grid_get(terrain_map,i,j))
                ds_grid_set(papper_map,i,j,l)
            }
            
        }
    }
}
with(Obj_mini_map_controler){
    surface_free(mini_map)
}

with(obj_Partie){
    activite = 0
}

step = 0
delay = 0

//////////////////////////////////////
/*
Variable avancé objectifs
*/
Valide = 0;

//FANTASSIN
instance_create(660,450,obj_joueur)
A = instance_create(670+(random(4)-2),420+(random(4)-2),obj_agent_officier0_C1)

//A.Officiel = 1;
//A.Officier_sup = obj_joueur;

for (i = 0; i &lt; 65; i++)
    {
    B = instance_create(680+(random(40)-5),420+(random(80)-10),obj_agent_C1)
    B.Commandant = A.id
    ds_list_add(A.Regiment,B.id);
    }
with(A)
    {
    nomGroupe(id);
    /*List[0] = id;
    Argument[0] = List;
    Argument[1] = 4;
    Argument[2] = 200;
    Argument[3] = 1;
    Execute = IA_Groupe;*/
    }
    
A = instance_create(480,170,obj_agent_officier0_C1)
A.Officiel = 1;
//A.Commandant_sup = obj_joueur;

for (i = 0; i &lt; 120; i++)
    {
    B = instance_create(500+(random(20)-10),180+(random(20)-10),obj_agent_C1)
    B.Commandant = A.id
    ds_list_add(A.Regiment,B.id);
    }
with(A)
    {
    nomGroupe(id,true);
    /*List[0] = id;
    Argument[0] = List;
    Argument[1] = 4;
    Argument[2] = 200;
    Argument[3] = 1;
    Execute = IA_Groupe;*/
    }
    
//deuxiéme camp
instance_create(260,100,obj_general)
A = instance_create(240,110,obj_agent_officier0_C2)

A.Officiel = 1;
A.Officier_sup = obj_general;

for (i = 0; i &lt; 120; i++)
    {
    B = instance_create(240+random(20)-10,120+random(20)-10,obj_agent_C2)
    B.Commandant = A.id
    ds_list_add(A.Regiment,B.id);
    }
with(A)
    {
    nomGroupe(id,true);
    /*List[0] = id;
    Argument[0] = List;
    Argument[1] = 4;
    Argument[2] = 200;
    Argument[3] = 1;
    Execute = IA_Groupe;*/
    }
/*
for(var i=0;i&lt;10;i++){
    instance_create(541+(random(10)-20),250+(random(10)-20),obj_agent_C2)
}
*/
//fleche a tuto
instance_create(-100,-100,obj_arrow)

Timer = 0;
T = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>       switch(step){
        case 0: //bienvenue
            view_object[0] = obj_joueur
            view_vborder[0] = room_width / 2
            view_hborder[0] = room_height / 2
            if(mouse_check_button_pressed(mb_left))
                step = 1
            break
        case 1: // ici general
            with(obj_arrow){
                x = obj_joueur.x-10
                y = obj_joueur.y-10
                image_angle = 315
            }
            if(mouse_check_button_pressed(mb_left))
                step = 2
            break
        case 2: // ici unite
            with(obj_arrow){
                x = obj_agent_officier0_C1.x+10
                y = obj_agent_officier0_C1.y+10
                image_angle = 120
            }
            if(mouse_check_button_pressed(mb_left))
                step = 3
            break
        case 3: // visibilite
            with(obj_arrow){
                x = obj_joueur.x - 45
                y = obj_joueur.y - 150
                image_angle = 90
            }
            if(mouse_check_button_pressed(mb_left)){
                step = 4
                }
            break
        case 4: //mini-map
            with(obj_arrow){
                x = -100
                y = -100
                image_angle = 270
            }
            if(mouse_check_button_pressed(mb_left))
                step = 5
            break
        case 5: //mini-map
            if(obj_MAP_controller.toggle_papper == 1)
                step = 6
            break

        case 6: //annonce
            if(obj_MAP_controller.toggle_papper == 0)
                step = 7
            with(obj_arrow){
                x = -100
                y = -100
            }
            break;
        case 7: //nommage
            if(Valide == 1)
                step = 8
                Valide = 0;     
            break
        case 8: //Separer
            if(Valide == 1)
                step = 9;
                Valide = 0; 
            break
        case 9: //Patrouille
            view_object[0] = obj_VIEW_controller
            view_vborder[0] = room_width / 10
            view_hborder[0] = room_height / 10
            view_hspeed[0] = 10
            view_vspeed[0] = 10
            view_hview[0] = room_height*3.5/4
            view_wview[0] = room_width*3.5/4
            view_xview[0] = 100;
            view_yview[0] = 50;
            if instance_exists(obj_croix) == false
                {
                instance_create(500,200,obj_croix)
                }
            if(Valide == 1)
                step = 10;
                Valide = 0;
            break
        case 10: //Renseignement
            //view_object[0] = noone
            if(ds_list_find_index(obj_joueur.Regiment,"compagnie002") != -1){
                step = 11
            }
            if instance_exists(obj_croix)
                {
                with(obj_croix){
                    instance_destroy();
                }
                }
            break
        case 11 : //Troupe adverse
                if obj_MAP_controller.toggle_papper == 1
                    {
                    step = 12;
                    T = 150
                    }
            break
        case 12 : //Carte stratégique
            if T == 0
            &amp;&amp; ds_list_find_index(obj_joueur.Regiment,"compagnie001") != -1
                {
                step = 13;
                }
            break
        case 13 : //La compagnie
            if obj_MAP_controller.toggle_papper == 0
                {step = 14;}
            break
        case 14 : //Attaque
            if Valide == 1
                {
                step = 15;
                Valide = 0;
                }
            break
        case 15: //Massacre
            if(Valide == 1 || instance_exists(obj_general) == false){
                step = 16;
                Valide = 0;
                delay = 90
            }
            break
        case 16: //fin
            step = 17
            break  
    }
delay--

/////////////////////////////////////////////////////////////////////////////////
/*
Analyse de ce qui se passe dans le reste de la room pour l'avancer tu tuto
*/

if instance_exists(obj_joueur)
    {
    if ds_list_find_index(obj_joueur.Regiment,"compagnie002") != -1
        {
        Pat = true;
        }
    }
if T &gt; 0
    {
    T --;
    }
else
    {
    T = 0;
    }
if Timer &gt;= 1
    {
    Timer --;
    }
if Timer == 1
    {
    room_goto(Title_screen)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_valign(fa_top)
draw_set_halign(fa_center)
        switch(step){
            case 0 : //bienvenue
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2,
                room_width/2+500,room_height/2+150,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Bienvenue dans SIR, YES SIR! Nous allons maintenant apprendre les bases.",
                15,300,3,3,0)
            break;
            case 1 :  // ici general
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2+200,
                room_width/2+500,room_height/2+400,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2+200,
                "Voici votre général. C'est à travers lui que vous donnerez vos ordres à vos unités. Si cette unité venait à mourir, la partie est perdue.",
                15,300,3,3,0)
                break;
            case 2:  // ici unite
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2+200,
                room_width/2+500,room_height/2+400,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2+200,
                "Voici vos unités. Elles combattront pour vous jusqu'à la mort.",
                15,300,3,3,0)
                break;
            case 3 : // visibilite
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2+200,
                room_width/2+500,room_height/2+400,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2+200,
                "Votre vision est dépendante de celle de votre général. Ces obstacles vous empêchent de voir plus loin.",
                15,300,3,3,0)
                break;
            case 4 : //mini-map
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2-200,
                room_width/2+500,room_height/2+100,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2-200,
                "Ne vous inquiétez pas, vos unités vous enveront des informations sur le relief. De plus vous pouvez observer le terrain sur la mini-carte en bas à droite. Utilisez la molette de souris pour prendre un peu de hauteur",
                15,300,3,3,0)
                draw_sprite_ext(sprite17,0,room_width-100,room_height-170,4,4,270,c_white,1)
                break;
            case 5 ://affichage mini-map
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,room_height/2-200,
                room_width/2+500,room_height/2,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2-200,
                "Vous pouvez aussi appuyer sur '[SHIFT]' pour afficher la carte stratégique grandeur nature. Allez-y, essayez!",
                15,300,3,3,0)
                break;
            case 6 : //annonce
                draw_set_colour(c_blue)
                draw_rectangle(room_width/2-500,0,
                room_width/2+500,200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,0,
                "Mais avant de pouvoir faire quoi que ce soit, nous devons nommer un officier pour diriger vos unités. Revenez sur le terrain ([SHIFT])",
                15,300,3,3,0)
                break;
            case 7 : //Nommage
                draw_set_colour(c_blue)
                draw_rectangle(0,0,
                room_width,300,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,0,
                "Pour nommer un officier, tapez : 'chef1 grader' dans la barre commande en bas de l'écran. Utilisez [DOWN] pour nettoyer la console, [UP] pour utiliser l'historique",
                15,300,3,3,0)
                break;
            case 8 : // separer
                draw_set_colour(c_blue)
                draw_rectangle(0,0,
                room_width,150,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,0,
                "Bien, maintenant que nous avons un officier pour diriger vos troupes, vous pouvez lui demander de diviser sa troupe en deux avec 'troupe0001 diviser'. Cela créera automatiquement un officier qui dirigera la nouvelle troupe.",
                15,500,2,2,0)
                break;
            case 9 : // Patrouille
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Vous vous souvenez quand je vous ai dit que votre champ de vision était limité? Et si des ennemis se dissimulaient derrière cette montagne au nord? Envoyez une patrouille vérifier! Ecrivez 'patrouille00011 deplacer ' et faîtes un clic droit à proximité de la croix. Vous pouvez déplacer la caméra en collant les bordures de l'écran.",
                15,500,2,2,0)
                break;
            case 10 : //Renseignement
                draw_set_colour(c_blue)
                draw_rectangle(0,0,
                room_width,200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,0,
                "Bien, il faut maintenant attendre que vos unités trouvent quelque chose",
                15,300,3,3,0)
                break;
            case 11 : //Troupe adverse
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Des ennemis ont été découvert derrière la montagne! Vos troupes ont marqué leur position sur votre carte stratégique. Allez voir! ([SHIFT]).",
                15,300,3,3,0)
                break;
            case 12 : //Carte stratégique
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Vous voici sur la carte stratégique. Remarquez la présence de jeton de couleur, les bleus sont vos troupes, les rouges les troupes adverses.",
                15,300,3,3,0)
                break;
            case 13 : //La companie
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Il y a une troupe alliée non loin de l'armée adverse! Ordonnez lui d'attaquer. Revenez sur le terrain ([SHIFT]).",
                15,300,3,3,0)
                break;
            case 14 : //Attaque
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Bien! Donnez l'ordre 'compagnie001 attaquer compagnie002'.",
                15,300,3,3,0)
                break;
            case 15 : //Massacre
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Votre compagnie risque d'avoir besoin de renfort, envoyez votre troupe0001",
                15,300,3,3,0)
                break;
            case 16 : //Fin
                draw_set_colour(c_blue)
                draw_rectangle(0,room_height/2,
                room_width,room_height/2+200,false)
                draw_set_colour(c_black)
                draw_text_ext_transformed(room_width/2,room_height/2,
                "Félicitation! Vous avez gagné!",
                15,300,3,3,0)
                break;
        }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
