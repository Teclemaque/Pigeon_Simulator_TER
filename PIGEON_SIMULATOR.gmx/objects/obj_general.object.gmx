<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pigeon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_agent_C2</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Camp = -1;
ExecuteOrdre = noone;
Grade = 14;
Officiel = 1;
Name = "GENERAL";
Commandant = id;
Classe = 10;//General supreme

Ordres = ds_list_create();

repeat(5)
    {
    A = instance_create(x+random(20)-10,y+random(20)-10,obj_messager_C2)
    A.Officier_sup = id;
    }
    
Renseignement = ds_list_create();
Regiment = ds_list_create();
RegimentAllie = ds_list_create();


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////////////////////////////////////
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Rens = ds_list_find_value(Renseignement,0)//ou 0

//for (j = 0; j &lt; array_length_1d(Rens); j++)
if is_array(Rens)
    {
    if ds_map_find_value(global.Regiments, Rens[1]) != undefined
        {
        Agent = ds_map_find_value(global.Regiments, Rens[1]);
        
        if instance_exists(Agent)
            {
            if ds_list_find_index(Regiment, Agent.Name) == -1
                {
                ds_list_add(Regiment, Agent.Name)
                
                if Agent.Camp == Camp
                    {
                    ds_list_add(RegimentAllie, Agent)
                    }
                }
            }
        }
    }
ds_list_delete(Renseignement,0)

if ds_list_find_index(Regiment,obj_joueur) != -1
    {
    for (i = 0; i &lt; ds_list_size(RegimentAllie); i++)
        {
        A = ds_list_find_value(RegimmentAllie,i)
        Messager = instance_nearest(x,y,obj_messager_C2); //Alors on cherche le messager le plus proche
        Messager.ArgumentMessager[] = 0;//On reinitialise son tableau contenant le parametre du message
        if distance_to_object(Messager) &lt;= 25
        &amp;&amp; Messager.Mission == 0 // Si le messager est suffisament proche et pas deja en mission
            {
            //ds_list_add(Messager.Destinataire,ExecuteOrdre);
            Messager.ArgumentMessager[0] = A;//On lui donne le destinaire
            Messager.ArgumentMessager[1] = "ORDRE";//On indique que le message est un ordre
            Messager.ArgumentMessager[2] = IA_Attaque;//L'ordre (le script)a transmettre
            Messager.ArgumentMessager[3] = obj_joueur;//Les parametre de l'odre (du script)
            Messager.ArgumentMessager[4] = 1;
            Messager.ArgumentMessager[5] = 1;
            Messager.ArgumentMessager[6] = A.MSpeed;
            Messager.ArgumentMessager[7] = 200;
            // Une fois que le tableau est comble (ici sa taille est de 6)
            // On le place dans la saccoche du messager. La saccoche contient des tableaux
            // 1 tableau par message
            ds_list_add(Messager.SaccocheMessage,Messager.ArgumentMessager)
            Messager.Message += 1;// On indique au messager qu'il a un new message
            
            // REMARQUE SI ON RAJOUTE UN NOUVEL ORDRE IL FAUT REINITIALISER ArgumentMessager[]
            // Sans quoi les valeurs sont fausses
            Messager.ArgumentMessager[] = 0;
            Mission = 1;
            }
        }
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

if obj_MAP_controller.toggle_papper == 1
    {
    draw_sprite_ext(spr_pigeon,-1,x,y,1,1,0,c_red,1)
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
